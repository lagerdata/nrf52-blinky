name: Simple pipeline to build firmware and save generated image
on:
  push:
  schedule:
    - cron:  '*/3 * * * *'

concurrency: 
  group: DUT
  cancel-in-progress: false

jobs: #jobs are independent tasks that can either run serially or in parallel, and can also depend on the outcome of other jobs
  build: #this the start of the job "build". this can be called anything
    runs-on: ubuntu-latest #what operating system this job will run on
    steps: #steps are instructions that a given job will carry out.
      - name: Checkout the code # description of what the step will do. Can call it anything
        uses: actions/checkout@v2 #This is the action being run. Actions hosted on github begin with "actions/" This action will checkout your project
        with:
          submodules: 'recursive'
          
      - name: Run linter
        uses: docker://lagerdata/devenv-cortexm-nrf52
        with:
          entrypoint: /usr/local/bin/cpplint
          args: /github/workspace/application/src/main.c 

      - name: Build Project
        uses: docker://lagerdata/devenv-cortexm-nrf52 #this is a custom "action" that uses the docker image lagerdata/devenv-cortexm hosted at https://hub.docker.com/u/lagerdata
        with:
          entrypoint: /usr/bin/make #this is the "action" being run. In this case running the "make" command


      - name: Save hex image
        uses: actions/upload-artifact@v2 #Another standard action that uploads an artifact, in this case a hex image.
        with:
          name: blinky_hex_image
          path: _build/nrf52840_xxaa.hex #hex image (generated by running "make" in the "Build Project" step) being uploaded